@page "/reports"
@using AquAnalyzerAPI.Models
@inject IReportPageService ReportPageService
@inject NavigationManager NavigationManager

<div class="container">
    <div class="header">
        <h2>Reports</h2>
        <button class="btn btn-primary" @onclick="CreateNewReport">Create New Report</button>
    </div>

    @if (reports == null)
    {
        <p>Loading...</p>
    }
    else if (!reports.Any())
    {
        <div class="empty-state">
            <p>No reports to show</p>
        </div>
    }
    else
    {
        <div class="reports-grid">
            @foreach (var report in reports)
            {
                <div class="report-card">
                    <div class="report-header">
                        <h4>@report.Title</h4>
                        <span class="date">@report.GeneratedDate.ToShortDateString()</span>
                    </div>
                    <p class="description">@report.Description</p>
                    <div class="stats">
                        <span>@report.Visualisations?.Count Visualisations</span>
                    </div>
                    <div class="actions">
                        <button class="btn btn-sm btn-outline-primary" @onclick="() => ViewReport(report.Id)">
                            <i class="fas fa-eye"></i> View
                        </button>
                        <button class="btn btn-sm btn-outline-secondary" @onclick="() => EditReport(report.Id)">
                            <i class="fas fa-edit"></i> Edit
                        </button>
                        <button class="btn btn-sm btn-outline-danger" @onclick="() => DeleteReportPrompt(report.Id)">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                </div>
            }
        </div>
    }

    @if (showDeleteDialog)
    {
        <RadzenDialog>
            <RadzenDialogTitle>Delete Report</RadzenDialogTitle>
            <RadzenDialogContent>
                <p>Are you sure you want to delete this report?</p>
            </RadzenDialogContent>
            <RadzenDialogActions>
                <button class="btn btn-danger" @onclick="DeleteReport">Delete</button>
                <button class="btn btn-secondary" @onclick="CancelDelete">Cancel</button>
            </RadzenDialogActions>
        </RadzenDialog>
    }
</div>

@code {
    private List<Report> reports = new();
    private bool showDeleteDialog = false;
    private int reportIdToDelete;

    protected override async Task OnInitializedAsync()
    {
        await LoadReports();
    }

    private async Task LoadReports()
    {
        reports = (await ReportPageService.GetAllReports()).ToList();
    }

    private void CreateNewReport()
    {
        int newId = reports?.Any() == true ? reports.Max(r => r.Id) + 1 : 1;
        NavigationManager.NavigateTo($"/report/new/{newId}");
    }

    private void ViewReport(int id)
    {
        NavigationManager.NavigateTo($"/report/{id}");
    }

    private void EditReport(int id)
    {
        NavigationManager.NavigateTo($"/report/edit/{id}");
    }

    private void DeleteReportPrompt(int id)
    {
        reportIdToDelete = id;
        showDeleteDialog = true;
    }

    private async Task DeleteReport()
    {
        await ReportPageService.DeleteReport(reportIdToDelete);
        showDeleteDialog = false;
        await LoadReports();
    }

    private void CancelDelete()
    {
        showDeleteDialog = false;
    }
}