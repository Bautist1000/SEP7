@page "/register"
@using AquAnalyzerAPI.Models
@using AquAnalyzerAPI.Interfaces
@inject IAuthServiceAPI AuthServiceAPI
@inject NavigationManager NavigationManager

<h1>Register</h1>
<h5>Select your role and fill in the details:</h5>

<div class="mb-4">
    <label for="roleSelection" class="form-label">Role:</label>
    <select id="roleSelection" class="form-control" @bind="selectedRole" @bind:event="onchange">
        <option value="Analyst">Analyst</option>
        <option value="VisualDesigner">Visual Designer</option>
    </select>
</div>

<EditForm Model="@currentUser" OnValidSubmit="@RegisterUser">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" @bind-Value="currentUser.Username" class="form-control" />
        <ValidationMessage For="@(() => currentUser.Username)" />
    </div>
    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="currentUser.Email" class="form-control" />
        <ValidationMessage For="@(() => currentUser.Email)" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="currentUser.Password" class="form-control" type="password" />
        <ValidationMessage For="@(() => currentUser.Password)" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-3">@errorMessage</div>
}

@if (showModal)
{
    <div class="modal" style="display:block; position:fixed; top:0; left:0; width:100%; height:100%; background-color:rgba(0,0,0,0.5); z-index:1000;">
        <div class="modal-dialog" style="background:white; margin:15% auto; padding:20px; max-width:400px; text-align:center; border-radius:10px;">
            <h4>Registration Successful!</h4>
            <p>Your account has been created successfully. Please log in to continue.</p>
            <button class="btn btn-primary" @onclick="GoToLogin">Go to Login</button>
        </div>
    </div>
}

@code {
    private User currentUser = new Analyst { Role = "Analyst" }; // Default role
    private string selectedRole = "Analyst";
    private string? errorMessage;
    private bool showModal = false;

    private void OnRoleChanged()
    {
        SetUserModel();
    }

    private void SetUserModel()
    {
        if (selectedRole == "Analyst")
        {
            currentUser = new Analyst { Role = "Analyst" };
        }
        else if (selectedRole == "VisualDesigner")
        {
            currentUser = new VisualDesigner { Role = "VisualDesigner" };
        }
    }

    private async Task RegisterUser()
    {
        try
        {
            await AuthServiceAPI.RegisterAnalystAsync((Analyst)currentUser);
            showModal = true;
        }
        catch (Exception ex)
        {
            errorMessage = $"Registration failed: {ex.Message}";
        }
    }

    private void GoToLogin()
    {
        showModal = false;
        NavigationManager.NavigateTo("/Login");
    }
}
