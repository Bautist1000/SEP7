@using Microsoft.AspNetCore.Components.Authorization
@using AquAnalyzerWebApp.Interfaces
@using AquAnalyzerAPI.Models
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject INotificationsService NotificationsService
@inject NavigationManager NavigationManager
@implements IDisposable

<button class="abnormality-button @(pendingAbnormalities > 0 ? "alert" : "")" @onclick="NavigateToNotifications">
    <i class="fas fa-exclamation-circle"></i>
    @if (pendingAbnormalities > 0)
    {
        <span class="badge badge-danger">
            @pendingAbnormalities
        </span>
    }
</button>

@code {
    private bool isDisposed;
    private int pendingAbnormalities = 0;
    private Timer refreshTimer;

    protected override async Task OnInitializedAsync()
    {
        await UpdateAbnormalityCount();
        SetupRefreshTimer();
    }

    private void SetupRefreshTimer()
    {
        refreshTimer = new Timer(async _ =>
        {
            if (!isDisposed)
            {
                await UpdateAbnormalityCount();
                await InvokeAsync(StateHasChanged);
            }
        }, null, TimeSpan.Zero, TimeSpan.FromSeconds(30));
    }

    private async Task UpdateAbnormalityCount()
    {
        try
        {
            var abnormalities = await NotificationsService.GetAllAbnormalities();
            pendingAbnormalities = abnormalities.Count(a => !a.IsDealtWith);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error updating abnormality count: {ex.Message}");
        }
    }

    private void NavigateToNotifications()
    {
        NavigationManager.NavigateTo("/notifications");
    }

    public void Dispose()
    {
        isDisposed = true;
        refreshTimer?.Dispose();
    }
}

<style>
    .abnormality-button {
        position: relative;
        border: none;
        background: transparent;
        cursor: pointer;
        padding: 0.5rem;
        transition: transform 0.2s;
    }

    .abnormality-button i {
        font-size: 1.5rem;
        color: #6c757d;
    }

    .abnormality-button.alert i {
        color: #dc3545;
        animation: pulse 2s infinite;
    }

    .badge {
        position: absolute;
        top: -5px;
        right: -5px;
        border-radius: 50%;
        padding: 0.25rem 0.5rem;
        font-size: 0.75rem;
    }

    .badge-danger {
        background-color: #dc3545;
        color: white;
    }

</style>